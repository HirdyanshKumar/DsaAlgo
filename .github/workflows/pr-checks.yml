name: DSA Algo PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # PR Title Check
  pr-title-check:
    runs-on: ubuntu-latest
    steps:
    - name: Check PR Title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          perf
          test
          chore
          problem
          solution
        requireScope: false
        scopes: |
          frontend
          backend
          database
          auth
          problems
          ui

  # File Changes Check
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          frontend:
            - 'frontend/**'
          backend:
            - 'backend/**'

  # Frontend PR Checks
  frontend-pr-check:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Type check
      run: npm run build
    
    - name: Lint check
      run: npm run lint
    
    - name: Bundle size check
      run: |
        npm run build
        npx bundlesize

  # Backend PR Checks
  backend-pr-check:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Prisma validate
      run: npx prisma validate
    
    - name: Check for console.logs
      run: |
        if grep -r "console.log" --include="*.js" --exclude-dir=node_modules .; then
          echo "‚ùå Found console.log statements in code"
          exit 1
        else
          echo "‚úÖ No console.log statements found"
        fi

  # Auto-assign reviewers
  auto-assign:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
    - name: Auto assign PR
      uses: kentaro-m/auto-assign-action@v1.2.5
      with:
        configuration-path: '.github/auto-assign.yml'

  # Comment on PR
  pr-comment:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `üöÄ **Thanks for contributing to DSA Algorithm Platform!** 
            
            Your changes are being automatically tested. Here's what we're checking:
            - ‚úÖ Frontend build and React components
            - ‚úÖ Backend API and database schema
            - ‚úÖ Code quality and formatting
            - ‚úÖ Security vulnerabilities
            - ‚úÖ Dependencies audit
            
            The checks will complete in a few minutes. If everything passes, your PR will be ready for review! 
            
            **DSA Algo Team** üéØüìö`
          })
